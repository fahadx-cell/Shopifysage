<!-- AUTO-CONVERTED â€” manually verify dynamic behaviors, JS interactivity, and variable mappings. -->

{% comment %}
  Enhanced Product card snippet
  Usage: {% render 'product-card', product: product, show_quick_view: true %}
{% endcomment %}

<div class="product-card group cursor-pointer hover-elevate transition-all duration-300" 
     data-product-id="{{ product.id }}">
  
  <a href="{{ product.url }}" class="product-card-link">
    <!-- Product Image -->
    <div class="product-card-image relative aspect-square overflow-hidden rounded-t-md">
      {% if product.featured_media %}
        <img src="{{ product.featured_media | img_url: '400x400' }}" 
             alt="{{ product.featured_media.alt | default: product.title }}"
             class="w-full h-full object-cover transition-transform duration-300 group-hover:scale-105"
             loading="lazy">
      {% else %}
        <div class="product-card-placeholder w-full h-full bg-gray-100 flex items-center justify-center">
          <span class="text-gray-400">No image</span>
        </div>
      {% endif %}
      
      <!-- Badges -->
      <div class="product-card-badges absolute top-3 left-3 flex flex-col gap-2">
        {% if product.compare_at_price > product.price %}
          <span class="product-badge bg-red-500 text-white px-2 py-1 text-xs rounded">Sale</span>
        {% endif %}
        {% if product.tags contains 'featured' %}
          <span class="product-badge bg-blue-500 text-white px-2 py-1 text-xs rounded">Featured</span>
        {% endif %}
        {% if product.tags contains 'bestseller' %}
          <span class="product-badge bg-green-500 text-white px-2 py-1 text-xs rounded">Best Seller</span>
        {% endif %}
      </div>

      <!-- Quick Actions Overlay -->
      <div class="product-card-overlay absolute inset-0 bg-black/20 flex items-center justify-center gap-2 transition-opacity duration-300 opacity-0 group-hover:opacity-100">
        <!-- Add to Cart Form -->
        <form action="{{ routes.cart_add_url }}" method="post" enctype="multipart/form-data" class="add-to-cart-form">
          <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
          <button type="submit" 
                  class="btn-add-cart bg-blue-600 text-white hover:bg-blue-700 px-4 py-2 text-sm font-medium rounded transition-colors flex items-center gap-2"
                  {% unless product.available %}disabled{% endunless %}
                  onclick="event.stopPropagation()">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"></path>
            </svg>
            {% if product.available %}Add to Cart{% else %}Sold Out{% endif %}
          </button>
        </form>

        {% if show_quick_view %}
        <button type="button" 
                class="btn-quick-view bg-gray-600 text-white hover:bg-gray-700 px-4 py-2 text-sm font-medium rounded transition-colors flex items-center gap-2"
                onclick="event.stopPropagation(); openQuickView({{ product.id }})">
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
          </svg>
          Quick View
        </button>
        {% endif %}
      </div>
    </div>

    <!-- Product Info -->
    <div class="product-card-info p-4 space-y-2">
      <h3 class="product-card-title font-medium text-gray-900 line-clamp-2 leading-tight">
        {{ product.title }}
      </h3>
      
      {% if product.description != blank %}
        <p class="product-card-description text-sm text-gray-600 line-clamp-2">
          {{ product.description | strip_html | truncate: 80 }}
        </p>
      {% endif %}

      <div class="product-card-price-info flex items-center justify-between">
        <div class="product-card-price">
          {% if product.compare_at_price > product.price %}
            <span class="price-sale text-lg font-semibold text-red-600">{{ product.price | money }}</span>
            <span class="price-compare text-sm text-gray-500 line-through ml-2">{{ product.compare_at_price | money }}</span>
          {% else %}
            <span class="price-regular text-lg font-semibold text-gray-900">{{ product.price | money }}</span>
          {% endif %}
        </div>

        {% if product.type != blank %}
          <span class="product-card-type text-xs text-gray-500 capitalize">{{ product.type }}</span>
        {% endif %}
      </div>
    </div>
  </a>
</div>

<script>
// Add to cart functionality with AJAX
document.addEventListener('DOMContentLoaded', function() {
  const addToCartForms = document.querySelectorAll('.add-to-cart-form');
  
  addToCartForms.forEach(form => {
    form.addEventListener('submit', function(e) {
      e.preventDefault();
      
      const formData = new FormData(form);
      const button = form.querySelector('.btn-add-cart');
      const originalText = button.innerHTML;
      
      // Update button state
      button.disabled = true;
      button.innerHTML = 'Adding...';
      
      fetch('/cart/add.js', {
        method: 'POST',
        body: formData
      })
      .then(response => response.json())
      .then(data => {
        // Update cart count
        fetch('/cart.js')
          .then(response => response.json())
          .then(cart => {
            const cartCountElement = document.querySelector('#cart-count');
            if (cartCountElement) {
              cartCountElement.textContent = cart.item_count;
            }
          });
        
        // Show success message (customize as needed)
        button.innerHTML = 'Added!';
        button.classList.add('bg-green-600');
        
        setTimeout(() => {
          button.disabled = false;
          button.innerHTML = originalText;
          button.classList.remove('bg-green-600');
        }, 2000);
      })
      .catch(error => {
        console.error('Error adding to cart:', error);
        button.disabled = false;
        button.innerHTML = originalText;
      });
    });
  });
});

// Quick view functionality (placeholder - implement modal as needed)
function openQuickView(productId) {
  console.log('Quick view for product:', productId);
  // Implement quick view modal functionality here
  // This could open a modal with product details, variants, etc.
}
</script>

<style>
.product-card {
  background: hsl(var(--card));
  border: 1px solid hsl(var(--border));
  border-radius: var(--radius);
  overflow: hidden;
  transition: all 0.3s ease;
  position: relative;
}

.product-card:hover {
  transform: translateY(-4px);
  box-shadow: 0 10px 20px rgba(0,0,0,0.1);
}

.product-card-link {
  text-decoration: none;
  color: inherit;
  display: block;
}

.product-card-image {
  position: relative;
  aspect-ratio: 1;
  overflow: hidden;
  background: hsl(var(--muted));
}

.product-card-image img {
  transition: transform 0.3s ease;
}

.product-card:hover .product-card-image img {
  transform: scale(1.05);
}

.product-card-badges {
  z-index: 10;
}

.product-badge {
  font-weight: 500;
  backdrop-filter: blur(4px);
}

.product-card-overlay {
  z-index: 20;
}

.btn-add-cart, .btn-quick-view {
  backdrop-filter: blur(4px);
  font-weight: 500;
  border: none;
  cursor: pointer;
}

.btn-add-cart:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

.product-card-info {
  background: hsl(var(--card));
}

.product-card-title {
  color: hsl(var(--foreground));
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

.product-card-description {
  color: hsl(var(--muted-foreground));
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

.price-sale {
  color: hsl(var(--destructive));
}

.price-regular {
  color: hsl(var(--primary));
}

.price-compare {
  color: hsl(var(--muted-foreground));
}

.product-card-type {
  color: hsl(var(--muted-foreground));
}

/* Responsive adjustments */
@media (max-width: 640px) {
  .product-card-overlay {
    opacity: 1;
    background: rgba(0,0,0,0.1);
  }
  
  .btn-add-cart, .btn-quick-view {
    padding: 0.5rem 1rem;
    font-size: 0.875rem;
  }
}
</style>